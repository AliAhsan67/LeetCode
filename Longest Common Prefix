
/*Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.*/


class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
     int min=10000;
     int n=strs.size();
     if(n==0){
         return "";
     }
     if(n==1){
         return strs[0];
     }

     for(int i=0; i<n; i++){
         int size=strs[i].size();
         if(size<min){
             min=size;
         }
     }
     string res="";
     for(int i=0; i<min; i++)
     {
         char ch=strs[0][i];
         for(int j=1; j<n; j++)
         {
             if(ch!=strs[j][i])
             {
                 return res;
             }
             
         }
         res+=ch;
     }
     return res;
    }
};
